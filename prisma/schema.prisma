// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String?
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  UsersOnGroups UsersOnGroups[]
}

model Group {
  id            Int             @id @default(autoincrement())
  name          String
  UsersOnGroups UsersOnGroups[]
  schedule      Schedule?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model UsersOnGroups {
  userId    Int
  groupId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Group     Group    @relation(fields: [groupId], references: [id])
  UserRole  UserRole @default(USER)

  @@id([userId, groupId])
}

model Schedule {
  id       Int       @id @default(autoincrement())
  GroupId  Int       @unique
  Group    Group     @relation(fields: [GroupId], references: [id])
  subjects Subject[]
}

model Subject {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  description  String?
  selectedWeek Int
  selectedTime Int
  Schedule     Schedule? @relation(fields: [scheduleId], references: [id])
  scheduleId   Int?
}

enum UserRole {
  ADMIN
  USER
}
